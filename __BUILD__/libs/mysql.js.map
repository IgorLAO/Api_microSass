{"version":3,"sources":["../../libs/mysql.ts"],"sourcesContent":["import { MysqlConfig } from '@@/configs/mysql'\nimport { PlataSql } from 'pwi-plata-type'\nimport { Knex } from 'knex'\n\nexport class Mysql<T extends boolean = false> extends PlataSql.Driver<T>{\n    constructor(config: typeof MysqlConfig, trx?: Knex.Transaction) {\n        super({\n            client: 'mysql2',\n            connection: {\n                host: config.host,\n                user: config.user,\n                password: config.password,\n                database: config.database,\n                port: config.port,\n                ssl: \n                    config.ssl !== undefined ? undefined \n                    : typeof config.ssl === 'string' ? undefined\n                    : config.ssl\n                ,\n                options: {\n                    useUTC: false\n                }\n            }\n        }, (trx !== undefined) as any, trx)\n    }\n\n    /** @deprecated */\n    private query(query: string, args?: any[]): PlataPromise<any[]> {\n        return this.conn.raw(query, args ?? []).catch(\n            err => Plata.BuildPlataError({\n                errorID: 'BLMYSQLQUE001',\n                msg: 'Erro ao realizar select',\n                error: err?.toString()\n            })\n        )\n    }\n\n    public async healthCheck(): PlataPromise<[{ today: Date }]> {\n        const today: PlataResult<[{ today: Date }]> = await this.conn().select(this.conn.raw('now() as today')).catch(\n            err => Plata.BuildPlataError({\n                errorID: 'BLMYSQLHLT001',\n                msg: 'Erro ao acessar o banco de dados',\n                error: err\n            })\n        ) as any\n\n        return today\n    }\n\n    public async executeProcedure(procedure: string, params: MysqlProcedureParam[]): PlataPromise<any[]> {\n        const query = `CALL ${procedure} (${\", ?\".repeat(params.length).substring(2)})`\n        const queryParams = params.map(i => i.value)\n\n        return this.conn.raw(query, queryParams).catch(\n            err => Plata.BuildPlataError({\n                errorID: 'BLMYSQLEXC002',\n                msg: 'Erro ao execultar a procedure',\n                error: err?.toString()\n            })\n        )\n    }\n\n    public async selectAll(table: string) {\n        return this.conn.queryBuilder().select('*').from(table).catch(\n            err => Plata.BuildPlataError({\n                errorID: 'BLMYSQLSEL001',\n                msg: 'Erro ao realizar select',\n                error: err?.toString()\n            })\n        )\n    }\n\n    /** @deprecated */\n    public async selectAllWhere(table: string, where: string, args: any[]) {\n        return this.query(`SELECT * FROM ${table} WHERE ${where}`, args)\n    }\n}\n\nexport const newMysql = (config?: typeof MysqlConfig) => {\n    return new Mysql(config ?? MysqlConfig)\n}\n\nexport function getMysql(): Mysql {\n    return Plata.CacheClass(newMysql)\n}"],"mappings":";;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAA4B;AAC5B,4BAAyB;AAGlB,MAAM,cAAyC,+BAAS,OAAS;AAAA,EACpE,YAAY,QAA4B,KAAwB;AAC5D,UAAM;AAAA,MACF,QAAQ;AAAA,MACR,YAAY;AAAA,QACR,MAAM,OAAO;AAAA,QACb,MAAM,OAAO;AAAA,QACb,UAAU,OAAO;AAAA,QACjB,UAAU,OAAO;AAAA,QACjB,MAAM,OAAO;AAAA,QACb,KACI,OAAO,QAAQ,SAAY,SACzB,OAAO,OAAO,QAAQ,WAAW,SACjC,OAAO;AAAA,QAEb,SAAS;AAAA,UACL,QAAQ;AAAA,QACZ;AAAA,MACJ;AAAA,IACJ,GAAI,QAAQ,QAAmB,GAAG;AAAA,EACtC;AAAA;AAAA,EAGQ,MAAM,OAAe,MAAmC;AAC5D,WAAO,KAAK,KAAK,IAAI,OAAO,QAAQ,CAAC,CAAC,EAAE;AAAA,MACpC,SAAO,MAAM,gBAAgB;AAAA,QACzB,SAAS;AAAA,QACT,KAAK;AAAA,QACL,OAAO,KAAK,SAAS;AAAA,MACzB,CAAC;AAAA,IACL;AAAA,EACJ;AAAA,EAEA,MAAa,cAA+C;AACxD,UAAM,QAAwC,MAAM,KAAK,KAAK,EAAE,OAAO,KAAK,KAAK,IAAI,gBAAgB,CAAC,EAAE;AAAA,MACpG,SAAO,MAAM,gBAAgB;AAAA,QACzB,SAAS;AAAA,QACT,KAAK;AAAA,QACL,OAAO;AAAA,MACX,CAAC;AAAA,IACL;AAEA,WAAO;AAAA,EACX;AAAA,EAEA,MAAa,iBAAiB,WAAmB,QAAoD;AACjG,UAAM,QAAQ,QAAQ,SAAS,KAAK,MAAM,OAAO,OAAO,MAAM,EAAE,UAAU,CAAC,CAAC;AAC5E,UAAM,cAAc,OAAO,IAAI,OAAK,EAAE,KAAK;AAE3C,WAAO,KAAK,KAAK,IAAI,OAAO,WAAW,EAAE;AAAA,MACrC,SAAO,MAAM,gBAAgB;AAAA,QACzB,SAAS;AAAA,QACT,KAAK;AAAA,QACL,OAAO,KAAK,SAAS;AAAA,MACzB,CAAC;AAAA,IACL;AAAA,EACJ;AAAA,EAEA,MAAa,UAAU,OAAe;AAClC,WAAO,KAAK,KAAK,aAAa,EAAE,OAAO,GAAG,EAAE,KAAK,KAAK,EAAE;AAAA,MACpD,SAAO,MAAM,gBAAgB;AAAA,QACzB,SAAS;AAAA,QACT,KAAK;AAAA,QACL,OAAO,KAAK,SAAS;AAAA,MACzB,CAAC;AAAA,IACL;AAAA,EACJ;AAAA;AAAA,EAGA,MAAa,eAAe,OAAe,OAAe,MAAa;AACnE,WAAO,KAAK,MAAM,iBAAiB,KAAK,UAAU,KAAK,IAAI,IAAI;AAAA,EACnE;AACJ;AAEO,MAAM,WAAW,CAAC,WAAgC;AACrD,SAAO,IAAI,MAAM,UAAU,wBAAW;AAC1C;AAEO,SAAS,WAAkB;AAC9B,SAAO,MAAM,WAAW,QAAQ;AACpC;","names":[]}