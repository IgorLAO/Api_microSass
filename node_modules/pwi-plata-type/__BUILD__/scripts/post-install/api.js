"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.install = install;
async function install(tools, projectPackageJson) {
    const promises = [];
    promises.push(tools.createFolderToDest('clusters'));
    promises.push(tools.createFolderToDest('routes'));
    promises.push(tools.createFolderToDest('libs'));
    promises.push(tools.createFolderToDest('models'));
    promises.push(tools.createFolderToDest('custom'));
    promises.push(tools.createFolderToDest('@types'));
    promises.push(tools.createFolderToDest('cmds'));
    promises.push(tools.copyFolderToDest('configs'));
    promises.push(tools.copyFolderToDest('envs'));
    promises.push(tools.syncFolder('.vscode'));
    promises.push(tools.copyFileToDest('Dockerfile'));
    promises.push(tools.syncFileToDest('tsconfig.json'));
    projectPackageJson.scripts.start = 'plata-runtime + plata-api';
    projectPackageJson.scripts.dev = 'plata-runtime + plata-api --hot';
    projectPackageJson.scripts.create = 'plata-runtime --skip-recompile + plata-create';
    projectPackageJson.scripts.build = 'tsc -p . && plata-runtime + plata-build';
    projectPackageJson.scripts['gen:swagger'] = 'plata-runtime + plata-swagger';
    projectPackageJson.main = undefined;
    await Promise.all(promises);
    return projectPackageJson;
}
//# sourceMappingURL=api.js.map