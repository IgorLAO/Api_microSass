"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.main = void 0;
const build_1 = require("++/libs/build");
const main = async () => {
    if (Plata.ProjectJson.plata_no_setup !== undefined) {
        console.log('Plata não configurada remova o plata_no_setup do package.json');
        process.exit(0);
    }
    const args = process.argv.slice(process.argv.indexOf('+'));
    let cli = null;
    switch (Plata.ProjectJson.plata_type ?? 'api') {
        case 'api':
            cli = await require('++/bin/extras/create-api-cli').cli;
            break;
        case 'lib':
            cli = await require('++/bin/extras/create-lib-cli').cli;
            break;
        case 'cluster':
            cli = await require('++/bin/extras/create-cluster-cli').cli;
            break;
        default:
            console.log(`${Plata.ProjectJson.plata_type} not supported`);
            process.exit(0);
            break;
    }
    const config = await build_1.PlataBuild.getBuildConfig();
    if (config.errorID !== undefined) {
        console.log(`⚠️ - Não foi possivel carregar a config - ${config.errorID}`);
        return cli.parseAsync(args);
    }
    if (config.plugins?.length) {
        for (let i = 0; i < config.plugins.length; i++) {
            const plugin = config.plugins[i];
            if (plugin.cliCreate !== undefined) {
                cli = await plugin.cliCreate(cli);
            }
        }
        console.log(`✅ - Plugins carregados`);
    }
    return cli.parseAsync(args);
};
exports.main = main;
//# sourceMappingURL=plata-create.js.map