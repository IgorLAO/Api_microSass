"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.PlataRuntimeE = void 0;
const glob_1 = __importDefault(require("glob"));
const node_path_1 = __importDefault(require("node:path"));
var PlataRuntimeE;
(function (PlataRuntimeE) {
    async function RequireAsync(p) {
        try {
            return {
                filePath: p,
                name: node_path_1.default.basename(p).replace('.ts', '').replace('.js', ''),
                exports: require(p)
            };
        }
        catch (err) {
            return {
                errorID: 'PLTRF0001',
                msg: `Error while importing file ${p}`,
                error: {
                    message: err?.toString(),
                    stack: err?.stack ?? new Error().stack
                }
            };
        }
    }
    PlataRuntimeE.RequireAsync = RequireAsync;
    async function RequireFolder(p) {
        const promises = [];
        glob_1.default.sync(`${p.replace(/\\/g, '/')}/**/*.+(js|ts)`)
            .filter(file => !file.endsWith('.d.ts'))
            .forEach(file => {
            file = file.replace(/(\.ts|\.js)$/, '');
            promises.push(Plata.FastPromise(() => Plata.RequireAsync(file)));
        });
        return Promise.all(promises).then(rs => {
            const errors = [];
            const result = [];
            rs.forEach(r => {
                if (r.errorID !== undefined) {
                    errors.push(r);
                }
                else {
                    result.push(r);
                }
            });
            if (errors.length !== 0) {
                return {
                    errorID: 'PLTRF0003',
                    msg: `Errors while importing folder: ${p}`,
                    error: errors
                };
            }
            return result;
        }, err => {
            return {
                errorID: 'PLTRF0002',
                msg: `Error while importing folder: ${p}`,
                error: {
                    message: err?.toString(),
                    stack: err?.stack ?? new Error().stack
                }
            };
        });
    }
    PlataRuntimeE.RequireFolder = RequireFolder;
    async function ReadEnvFileToPromise(p) {
        const envFile = Object.create(null);
        if (await Plata.files.access(p.replace('__BUILD__/', ''))) {
            p = p.replace('__BUILD__/', '');
        }
        const result = await Plata.files.ReadFileAsync(p, async (line) => {
            if (line[0] === '#')
                return;
            if (line !== '') {
                const env = line.split('=');
                if (env.length >= 2) {
                    const [key, ...v] = env;
                    let value = v.join('=');
                    if (value[0] === '{' && value.slice(-1) === '}')
                        value = process.env[value.slice(1, -1)] ?? '';
                    if (value !== '')
                        envFile[key] = value;
                }
            }
        });
        if (result !== null) {
            return result;
        }
        return envFile;
    }
    PlataRuntimeE.ReadEnvFileToPromise = ReadEnvFileToPromise;
})(PlataRuntimeE || (exports.PlataRuntimeE = PlataRuntimeE = {}));
//# sourceMappingURL=require.js.map