"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.main = main;
const cluster_1 = require("++/libs/cluster");
async function main() {
    const cluster = new cluster_1.PlataClusterManager();
    if (cluster.isPrimary()) {
        const clustersPromise = require("@@/clusters/*.*");
        const clusters = await clustersPromise;
        if (clusters.errorID !== undefined) {
            console.log(clusters);
            process.exit(0);
        }
        const promises = [];
        clusters.forEach(c => {
            const config = c.exports.default;
            promises.push(cluster._startCluster(config).then(r => {
                if (r !== null) {
                    console.log(r);
                    process.exit(0);
                }
            }));
        });
        await Promise.all(promises);
    }
    else {
        if (Plata.config._PLATA_WORKER_NAME === undefined) {
            await cluster.send({
                action: 'KILL',
                msg: 'tried to start a Worker without _PLATA_WORKER_NAME'
            });
            return;
        }
        await cluster._onStartCluster(Plata.config._PLATA_WORKER_NAME, Plata.config._PLATA_WORKER_TYPE);
    }
}
//# sourceMappingURL=plata-cluster.js.map