import fs from 'node:fs/promises'
import path from 'node:path'

export async function loadRuntimeLibs() {
    const plata = Object.create(null)

    const runtimeLibs: PlataResult<string[]> = await fs.readdir(path.join(__dirname)).catch(err => {
        return {
            errorID: 'PRLORUNTIME',
            msg: err.message,
            error: err
        }
    })

    if (runtimeLibs.errorID !== undefined) {
        console.error(runtimeLibs)
        process.exit(1)
    }

    const promises = runtimeLibs.map(lib => Promise.resolve().then(() => new Promise(resolve => {
        if (lib.slice(-4) === 'd.ts') 
            return resolve(true)
        ;

        if (path.extname(lib) === '.map')
            return resolve(true)
        ;

        const r: { PlataRuntimeE?: any } = require(path.join(__dirname, lib))

        if (r.PlataRuntimeE === undefined) {
            return resolve(true)
        }

        for (const key in r.PlataRuntimeE) {
            plata[key] = r.PlataRuntimeE[key]
        }

        return resolve(true)
    })))

    await Promise.all(promises).catch(err => {
        console.error(err)
        process.exit(1)
    })


    return plata
}