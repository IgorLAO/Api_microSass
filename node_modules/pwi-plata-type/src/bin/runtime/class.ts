declare global {
    interface PlataRuntime extends PlataRuntimeEType {}
}

type PlataRuntimeEType = typeof PlataRuntimeE

export namespace PlataRuntimeE {
    export function CacheClass<T>(newFunction: (...args: any) => T): T {
        const p = process as any

        if (p.cache === undefined) {
            p.cache = Object.create(null)
        }

        if (p.cache[newFunction.name] === undefined) {
            p.cache[newFunction.name] = newFunction() 
        }

        return p.cache[newFunction.name]
    }
}